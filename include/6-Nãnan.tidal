do
  -- @name Include 2 - Nanan
  -- @setup
  hush
  resetCycles
  trbank 116
  setcps (112/120/2)
  let lead = lead1
  all $ f2 . (byshuf . fmask "t f") (shuffle 4 . chop 2)


do
  hush
  setkey' 0 "c" "major"
  setF "dawlatency" 0.02
  setI "base" "-2"
  let bassline = "7*2 ~ 4 6@4 [4 6]" - 7
  lead
    $ s2
    $ nok 0 ("^base" +| stack [accselect ["[0, ~@3 [4,6,9]@5]", "[0,8,[4,6] [5,7]]" +| "0@5 0 ~ ~"], bassline])
    # octave 4
    # amp 0.2


do
  g2 $ fmap (#amp ("[5.5 3 4 5]*2" / 8.5)) ["~@3 0*<1 2>", "~@3 0 . ~", "0*<1 2> ~ . 0"]

do
  rc silence
  rs $ s2 "0(3,8) . ~ 0 0 ~" # amp 0.7
  ch $ f2 0
  g2
    $ fmap (byacc $ fmask "t f@3" $ shuffle "[1|4]!4" . chop "[2|3]!4")
    $ fmap (# amp ("[5.5 3 4 5]*2" / 8.2)) ["~@3 0*<1 2>", "~@3 0 . ~", "0*<1 2> ~ . 0"]
  bd $ "~ 0*2"

hush

do
  setkey' 0 "c" "major"
  setF "dawlatency" 0.02
  setI "base" "-2"
  lead
    -- $ (cT 0 "dawlatency" <~)
    $ s2
    $ nok 0 ("^base" +| "[0, ~@3 [4,6,9]@5]")
    # octave 4 
  bass
    -- $ (cT 0 "dawlatency" <~)
    $ s2 
    $ nok 0 ("^base" +| "^bassline")
    # octave 4

do
  -- @name verse A
  rc $ s2 "0 0 ~ 0 0 ~ 0 ~ . 0!4"
  bass
    $ s2 
    -- $ nok 0 ("^base" +| "7 ~ ~ 7 ~ ~ 4@2  . [3 ~] [4 ~] [0 ~] <~ [0 ~]>" |- 7)
    $ nok 0 ("^base" +| "7 ~ ~ ~ ~ 3@2 . 4 ~ <~ 4> ~ <~ 4> ~ <6 5>@2" |- 7)
    # octave 4
  bd $ "~ 0*2" # amp 0.6 # sus 0.1
  lead
    $ s2
    $ nok 0 ("^base" +| "[0, ~@3 [4,6,9]@5]")
    # octave 4
    # amp 0.4

do
  -- @name alt
  setkey' 0 "c" $ s2 $ s8 "major mixolydian"
  setF "dawlatency" 0.02
  setI "base" $ s2 $ s8 "-2 -1"

do
  -- @name up
  setkey' 0 "c" $ s4 "minor"
  setI "base" $ s4 "3 2"

-- do
--   -- @name theme
--   solo "lead1"
--   solo "bass"
--   setkey' 0 "c" $ s4 "major . lydian"
--   setI "base" $ s4 "1@2 2 3 . -2 -1"
--   lead
--     $ (cT 0 "dawlatency" <~)
--     $ s2
--     $ nok 0 ("^base" + "[0,4,6,9]")
--     # octave 4
--   bass
--     $ (cT 0 "dawlatency" <~)
--     $ s2 
--     $ nok 0 ("^base" +| "0 ~ ~ -3@3 0 ~")
--     # octave 4

do
  -- Keys
  lead2 
    $ nok 0 (s4 "7 2 4 5 . 1 2 7 4 . 1 2 7 4 . 1 2 7 4")
    # octave 6
    # amp 0.2

do
  -- @name theme
    -- @name up
  hush
  setkey' 0 "<0 3 3 0>" "major"
  -- setkey' 0 "0" "major"
  setI "base" "<0 3 0 3>"
  -- setI "base" "<0 4 1 3>"
  bass
    $ nok 0 ("^base" +| "0" |- 7)
    # octave 4
  lead
    $ nok 0 ("^base" +| "[0,4,6,<9 9 8 8>]")
    # octave 4
    # amp 0.4
  lead2 
    $ nok 0 (s4 "7 2 4 5 . 1 2 7 4 . 1 2 7 4 . 1 2 7 4")
    # octave 6
    # amp 0.2

do
  g2 $ fmap (#amp ("[5.5 3 4 5]*2" / 7)) ["~@3 0*<1 2>", "~@3 0 . ~", "0*<1 2> ~ . 0"]
  cc $ f2 0 # amp 0.5

-- do
--   -- @name enter keys
--   hush
--   setkey' 0 "c" $ s2 $ s8 "major mixolydian"
--   setI "base" $ s2 $ s8 "-2 -1"
--   let leadpat = accselect ["7 <2!16 3!16> 4 6", s4 "7 <2!4 3!4> 4 6 . 7 [1 <2!4 3!4> 4] 13 14 . 7 [2 4 6] 8 11 . 6 [3,8] [1,6] 4"] :: Pattern Int
--   g2 $ fmap (#amp ("[5.5 3 4 5]*2" / 10)) ["~@3 0*<1 2>", "~@3 0 . ~", "0*<1 2> ~ . 0"]
--   cc $ f2 0 # amp 0.5
--   lead2
--     $ s2
--     $ nok 0 (f2 leadpat + 2 + "^base")
--     # amp 0.2
--     # sus 0.2
--     # octave 6

do
  setkey' 0 ("c" - "<0 2 0 0>/4") "lydian"
  setF "dawlatency" 0.02
  setI "base" ("<0!2 -2!2>/4")
  lead2 
    $ s2
    -- $ nok 0 (s2 $ stack ["7 2 4 5 . 1 2 7 4 . 1 2 7 4 . 1 2 7 4", "~ ~ ~ [6,8] ~ ~ [5,7,9] ~ . ~ -2 0 1 2 ~ ~ ~"])
    $ nok 0 (s2 $ (|- "^base") $ stack ["7 2 4 5 . 1 2 7 4 . 1 2 7 4 . 1 2 7 4", "~ ~ ~ [6,8] ~ ~ [5,7,9] ~ . ~ -2 0 1 2 ~ ~ ~"])
    # octave 6
    # amp 0.2

do
  -- @name verse B
  rc $ s2 "0 0 ~ 0 0 ~ 0 ~ . 0!4"
  bass
    $ s2 
    -- $ nok 0 ("^base" +| "7 ~ ~ 7 ~ ~ 4@2  . [3 ~] [4 ~] [0 ~] <~ [0 ~]>" |- 7)
    $ nok 0 ("^base" +| "7 ~ ~ ~ ~ 3@2 . 4 ~ <~ 4> ~ <~ 4> ~ 6@2" |- 7)
    # octave 4
  bd $ "~ 0*2" # amp 0.6 # sus 0.1
  lead
    $ s2
    $ nok 0 ("^base" +| "[0, ~@3 [4,6,9]@5]")
    # octave 4
    # amp 0.4

do
  -- @name return
  setkey' 0 "c" "lydian"
  setF "dawlatency" 0.02
  setI "base" "-2"

do
  -- @name end
  setkey' 0 "c" "mixolydian"
  setI "base" "-1"
  bass silence
  lead
    $ s2
    $ nok 0 ("^base" +| "[0, ~@3 [4,6,9]@5]")
    # octave 4
    # amp 0.4

do
  -- @name end
  hush













































-- -- --------------------------------------------------------- OLD
-- -- --------------------------------------------------------- OLD

-- do
--   -- @name Include 2 - Nanan
--   -- @setup
--   hush
--   trbank 113
--   -- setkey' 0 0 "lydian"
--   -- setkey' 1 0 "lydian"
--   -- setkey' 1 (-3) "dorian"
--   -- setkey' 2 "3" "mixolydian"
--   setkey' 0 (0 |- 3) "lydian"
--   setkey' 1 (0 |- 3) "lydian"
--   setkey' 1 ((-3) |- 3) "dorian"
--   setkey' 2 ("3" |- 3) "mixolydian"
--   setcps (112/120/2)
--   all id


--   hush

-- do
--   -- @name intro
--   -- @colors hc:green rs:green ch:yellow
--   ch $ "[2 ~ 2 ~ 2 1@2 2 ~ 2 ~ 2 2 ~ 1 ~ 2 2]/1.5" # amp ("[3 4 5]*4" |/ 11)
--   hc $ fast 4 $ "[~ <~!5 0> 0]" # amp (run 3 / 5)
--   rs $ fast 4 $ "0"

-- do
--   -- @name chords
--   setI "phrase" ""
--   reface
--     $ fast 2
--     $ stack
--       [ slow 3 (nok 1 $ "[0@7 1 ~ 1@9]" |+ 2 |+ "[0,4,6,12] [0,4,6,8,9]@2")
--         # amp (range 0.35 0.5 rand)
--       , nok 0 "^phrase"
--         # sus (1 / run 6) # amp (range 0.4 0.55 rand)
--       ]
--     # octave 4

-- do
--   -- @name phrase + kick
--   setI "phrase" "[11@2 6 7 9 13 . ~ 12 ~ 12@3 . 16 13 15 12 13 15]/3"
--   bd $ "0*4"

-- do
--   hush
--   oh "0*2"
--   setI "bases" "<0 3 -4 -2 1!4>*2"
--   reface
--     $ (|+ note "^bases")
--     $ fast 2
--     $ stack
--       [ nok 1 $ "2" |+ "<[0,4,6,8,9,12] [0,4,6,12]>"
--       , nok 0 "[[16|10] 13 15 12 13 [15|10] | [11 | 11 8]@2 6 7 9 13]" # sus (1 / run 6)
--       ]
--     # amp (range 0.35 0.5 rand)
--     # octave 4
--     -- |+ note "<0 3 -3 -5 -4!4>"
--   lt $ nok 0 "[0 -7]" |+ note "^bases" # amp 0.6 # sus 1


-- do
--   -- @name intro
--   -- @colors hc:green rs:green ch:yellow
--   -- ch $ "[2 ~ 2 ~ 2 1@2 2 ~ 2 ~ 2 2 ~ 1 ~ 2 2]/1.5" # amp ("[3 4 5]*4" |/ 11)
--   -- hc $ fast 4 $ "[~ <~!5 0> 0]" # amp (run 3 / 5)
--   rs $ "[~ 0]*6"
--   lt $ nok 0 "[~ 0 0]*4" |+ note "^bases" # amp 0.6 # sus 0.2 |- note 12

-- do
--   -- hush
--   oh silence
--   ch $ "[3 ~ 5 ~ 5 3 . 3 ~ 5 5 ~ 3 . 3 ~ 5 ~ 5 3]/1.5" # amp 0.4
--   hc $ "[~ ~ 0]*4"
--   bd $ "0*4"
--   sd $ fast 4 $ ( (1/3) <~) "[0!2 ~]"
--     # note "<10 120>"

-- all $ byacc (shuffle "[1 9*8]*3" . fast "[1 3*8]*3")

-- do
--   -- @name bass
--   hush
--   all id
--   setI "bases" "<0 0 -2>"
--   lt
--     $ slow 1.5
--     $ nok 0 ("0@7 1@2 . 1" |+ "^bases")
--     |+ note 12
--   reface
--     $ fast 2
--     $ stack
--       [ slow 3 (nok 1 $ "[0@7 1 ~ 1@9]" |+ 2 |+ "[0,4,6,12] [0,4,6,8,9]@2" |+ "^bases" )
--         # amp (range 0.35 0.5 rand)
--       , nok 0 ("^phrase" |+ slow 3 "^bases")
--         # sus (1 / run 6) # amp (range 0.4 0.55 rand)
--       ]
--     # octave 4

-- do
--   -- @name solo
--   hush
--   setI "phrase" ""
--   oh $ "0*4" # amp 0.24
--   bd $ "0 ~ 0 ~ 0 0 0 ~ 0 0 ~ 0" # amp 0.3
--   mt $ fast 4 $ "[~ ~ 0]"
--   setI "bases" "<0 0 -2>"
--   lt
--     $ slow 1.5
--     $ nok 0 ("[~@2 6 7 9 13 . ~@2 7 9 10 12 . ~ [8 ~ | ~ 8]@2 11@2 9]" |+ "^bases")
--     # amp 0.6
--     # sus 0.14
--     -- |+ note 12
--   reface
--     $ fast 2
--     $ stack
--       [ slow 3 (nok 1 $ "[0@7 1 ~ 1@9]" |+ 2 |+ "[0,4,6,13] [0,4,6,8,11]@2" |+ "^bases" )
--         # amp (range 0.25 0.34 rand)
--       ]
--     # octave 4



-- do
--   reface
--     $ fast 2
--     $ stack
--       [ slow 3 (nok 1 $ "[0@7 1 ~ 1@9]" |+ 2 |+ "[0,4,6,12] [0,4,6,8,9]@2")
--         # amp (range 0.35 0.5 rand)
--       , nok 0 "^phrase"
--         # sus (1 / run 6) # amp (range 0.4 0.55 rand)
--       ]
--     # octave 4
--   setI "bases" $ fast (2/3) $ "[0 2]"
--   lt $ nok 0 "[<2 3>@2 <4 5>@2 ~@2 . ~ 2 4 5 6 0]" # amp 0.6 # sus 0.2 |- note 12



-- do
--   -- @name curtain
--   -- hush
  
--   ch $ "[3 ~ 5 ~ 5 3 . 3 ~ 5 5 ~ 3 . 3 ~ 5 ~ 5 3]/1.5" # amp 0.4
--   hc $ "[~ ~ 0]*4"
--   bd $ "0*4"
--   sd $ fast 4 $ ( (1/3) <~) "[0!2 ~]"
--     # note "<10 120>"

-- do
--   setI "phrase" $ cat [ "11 9 7 . 6 5 4" |- 7
--       , "3 2 1 . 0 -1 -2"
--       , "-5"
--       , "~"
--       ]
--   reface $ stack
--     [nok 0 "^phrase" # sus 5 # octave 6 # amp 0.5
--     , fast 2 $ (note . cat)
--       [ k 0 ("[~ 0 ~ 0@2 ~]" |+ "[0,4,6,8,9,12]")
--       , k 0 ("[~ 0 ~ 0@2 ~]" |+ "[0,4,6,8,9,12]")
--       , k 0 ("[~ 1 ~ 1@2 ~]" |+ "[0,4,6,8,9]")
--       , k 0 ("[~ -2 ~ -2@2 ~]" |+ "[0,4,7,9,13,15]")
--       , k 0 ("[~ -5 ~ -5@2 ~]" |+ "[4,6,9,11,15]" |- 2)
--       , k 0 ("[~ -5 ~ -5@2 ~]" |+ "[4,6,9,11,15]" |- 2)
--       , k 0 ("[~ -5 ~ -5@2 ~]" |+ "[4,6,9,11,15]" |- 2)
--       -- , k 0 $ ("[~ 3 ~ 3@2 ~]" |+ "[0,1,3,6,9]")
--       , k 1 $ ("[~ 3 ~ 3@2 ~]" |+ "[0,2,6,7,11]")
--       ]
--       # octave 4
--     ]
--   lt $ fast 2 $ nok 0 ("[0@2 0 ~ 2 4 . -1 0 0 0 [-1 -3 | 1 1]@2]/2" |+ "<0 0 1 -2 2!4>")
--     # sus "<0.1 0.05>" # amp 0.7 |- note 12


-- do
--   setI "phrase" ""


-- do
--   hush




-- Don't run, this is just tonality stuff
-- let t = pI "step"
--     root = mI "root"
--     mode = mS "mode"
--     key = grp [root, mode]
--     -- p = streamReplace tidal
--     applykey keydef pat = (# note (scale mode steps |+ root)) $ pat
--       where steps = (fmap ivalue $ filterJust $ M.lookup "step" <$> pat)
--             root = fmap fromIntegral <$> fmap ivalue $ filterJust $ M.lookup "root" <$> keydef
--             mode = fmap svalue $ filterJust $ M.lookup "mode" <$> keydef
--     onkey k = applykey (key k)
--     dawchan name idx pat = p name
--                           $ (cT 0 "dawlatency" <~)
--                           $ applykey pat pat
--                           # s "loopback"
--                           # midichan idx
--                           # orbit 0
                              -- where notes = fmap nvalue $ filterJust $ M.lookup "note" <$> pat
                              --       steps = (fmap ivalue $ filterJust $ M.lookup "step" <$> pat)
                              --       root = fmap fromIntegral <$> fmap ivalue $ filterJust $ M.lookup "root" <$> pat
                              --       mode = fmap svalue $ filterJust $ M.lookup "mode" <$> pat
