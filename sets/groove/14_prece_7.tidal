do
  hush
  setcps (108/120)
  setkey' 1 "ds" "phrygian"
  setkey' 0 "ds" "harmonicMinor"
  all $ (# sus 0.1)
  ch $ fast 2 $ n "0*2" # amp "0.51 0.3"
  -- oh $ almostNever (chop 2) $ (n . press) "0*4" # amp 0.01
  bd
    -- $ n "[0 . 0@3 0@5 . ~ 0@3 . [0 0?] [~ 0@3]]/4"
    $ n "[0 . 0@3 0@5 . ~ 0@3 . [0 0?] [~ 0 0 ~]]/4"
    # amp 0.45
  sd $ n "[~ 0 . ~@3 0 . ~ 0 ~@2 0@4 . ~ 0]/4" # amp "0.3 0.4"
  mt $ "~@3 <~ 0>"
  setI "bassline" $ "[0@4 -1@3 <0!3 -2>@4 <3!3 -3>@5]/2" |* 0
  keys
    $ s2 
    -- $ (# octave 4)
    $ (also . fmap ((|+ note "^bassline") . nok 0)) [
      "[0@4 ~@4 0@3 ~@3 0@4 ~@4 0@4 ~@4 0@2]/2" |- 12,
      "[~@4 0@4 ~@3 0@3 ~@4 0@4 ~@4 0@6]/2" |- 5 |+ "[0,2@3 <1!3 2>]/2"
    ]
    $ nok 0 "[~@4 0@4 ~@3 0@3 ~@4 0@4 ~@4 0@6]/2"
  bass $ "^bassline"
    -- # octave 4

all $ (# sus 0.05)
    . ctrls [
      chunk 3 (shuffle 16 . segment 16),
      lock 0.25 0.5
    ]

all $ (# sus 0.05)
  -- . chunk 4 (hurry 2)
  -- . chunk 3 (shuffle 16 . segment 16)
  -- . (lock 0.5 1.75)
  -- . (lock 0.5 0.5)

lead1
  $ (# sus 0.05)
  $ chunk 4 (hurry 2)
  $ nok 1
  $ chunk 3 (shuffle 8 . (|+ (irand 5)) . segment 8)
  $ "[6 4 2 0 . -1 0 2 4]"

do
  bass $ s2 $ note "^bassline" # octave 3 |+ nok 0 2

also pats pat = stack (pat:pats)

do
  -- setI "bassline" "[0@4 -1@3 <0!3 -2>@4 <3!3 -3>@5]/2"
  setI "bassline" "[0@4 -1@3 <0!3 -2>@4 <5!3 -3>@5]/2"


do
  -- @setup
  let index = f2 $ s3 "0 ~@3 [0 ~ 1 ~]@3 [0@3 0 ~@5]@4.5 [2@63 ~]@7.5 3@2" :: Pattern Int
      -- indexed = slow (42/12) . squeeze (cI_ "idx")
      indexed = slow (42/12) . squeeze index
  setkey 3 "lydian"
  setkey' 0 "ds" "{ lydian@20 <major lydian>@22 }%12"
  setkey' 1 3 "lydian"
  setN "chr1"
    $ indexed ["[-3,0,2,5]", "[-4,-1,1,5]", "[-3,0,2,5]", "[-3,0,2,5]", "[-3,0,2,5]" |- 2, "[-3,0,2,5]" |- 1]
  setkey' 2
    (indexed ["ds", "e", "es", "es", "ds", "ds"])
    (indexed ["lydian", "minor", "mixolydian", "dorian", "lydian", "lydian"])
  -- all $ swingBy (0.04) 6
  -- setcps (154/120/2)
  setcps (170/120/2)
  setN "mel1" $ "{ 0@3 2 5 2 3 4 8 9@4 0@4 4 5 8 6@3 1@3 3@3 6@7 4 5 6 4 2 1 }%8"
  -- setN "mel1" $ f2 $ s3 "{ 0@3 2 5 2 3 4 8 9@4 0@4 4 5 8 6@3 1@3 3@3 6@7 4 5 6 4 2 1 }%12"
  bank "mc" 87
  trbank 13
  all $ swingBy (0.05) 4 . (byshuf . fmask "f t@3") (sometimes (chop 2) . shuffle 4 . sometimes (chop 2))
  setI "meloct" 3
  setI "chroct" 5
  setF "melgain" $ 0.8 |+ range 0.05 0.2 rand
  setF "melsus" 4
  setF "chrgain" 0
  setF "refaceamp" 0.4
  setkey' 0 "ds" "lydian"


do
  hush
  setF "dawlatency" 0.02
  bass $ nok 1 "^mel1"
    # sus 0.9
    # octave 4
    # cut 1
    # amp 0.2

do
  -- @drums
  sd $ "~ 0"
  bd $ accselect ["{0 ~ ~ ~ 0 ~ ~ 0 ~ ~ ~}%8", "0@3 0@5 . ~@3 0"]
  bd $ "0!2 . ~@3 0"
  ch
    $ f4
    $ n "0*2"
    # amp "0.4 0.1"



do
  hush
  setF "meldeg" 0
  setF "chrdeg" 0
  -- dawbank "keys" 130

do
  keys
    $ degradeBy "^chrdeg"
    $ nok 2 "^chr1"
    # octave 4
    -- # amp "^refaceamp"
    # amp "0.7"

hush

do
  -- intro drums
  bd $ fast (3/2) $ note "[0 0 ~ [~ 0] . 0@3 0@4 0]/2"
  oh $ note "{[~ 0] ~@2 [~ 0]}%6" # amp 0.05
  ch
    -- $ rarely (chop "1 . 3" . (|* amp "1 0.5 0.1"))
    $ fast 3
    $ n "0*2 . 0*2 0"
    # amp "0.42 0.13@3"
    # sus "1 0.13@3"

do
  -- @section refocus
  -- piano' 16 silence
  setF "chrgain" $ 0.8 |+ range 0.05 0.2 rand
  -- ma 1 1
  setI "meloct" 3
  setI "chroct" 4
  setF "melgain" 0.7
  setF "chrgain" 0.6

do
  setI "meloct" 4
  setI "chroct" 5

hush

do
  setF "chrgain" 0.35
  setF "melgain" 0.35
  setF "hatopen" 0.2
  setN "mel1" "{ 0@3 2 5 2 3 4 8 9@4 0@4 4 5 8 6@3 1@3 3@3 6@6 2 4 5 [6 7 6|6]@3 4 2 1 }%12"



ltoff 0


-- do
--   -- @section closing harmonics
--   -- mamps [0.6,0.6,0.6,0,0.6,0.6]
--   setF "melgain" 0
--   setF "meloct" 6
--   setF "bassgain" 0
--   setF "hatopen" 0.5
--   setI "chroct" 4
--   setI "2nds"
--     $ fast (6/(3+3+2+3+3+5+3+2+2))
--     $ ring "1 -2 -3" "x@3 x@3 x@2 x@3 x@3 x@5 x@3 x@2 x@2"

do
  setF "chrgain" 0
  setF "melgain" 0
  setF "bassgain" 0.4
  setF "hatopen" 0.2

do
  -- setF "chrgain" 0.17
  setF "chrgain" (range 0.2 0.3 rand)

import Data.Maybe (fromMaybe)

import Data.Map as M (findWithDefault)

-- years later... proper tonality
-- let withmodality pat = root # pat # (note . (|+ keyoffset) . (|+ root) . scale mode) step
let withmodality pat =
                        pat |> note (scale mode step |+ root |+ offset)
                        where 
                            -- root   = fmap (fromIntegral . ivalue . (M.findWithDefault (VI 0) "root"))           $ pat
                            -- offset = fmap (fromIntegral . ivalue . (M.findWithDefault (VI 0) "keyoffset"))      $ pat
                            -- mode   = fmap                (svalue . (M.findWithDefault (VS "chromatic") "mode")) $ pat
                            -- step   = fmap                (ivalue . (M.findWithDefault (VI 0) "step"))           $ pat
                            root   = fmap (fromIntegral . ivalue . (M.findWithDefault (VI 0) "root"))           $ pat
                            offset = fmap (fromIntegral . ivalue . (M.findWithDefault (VI 0) "keyoffset"))      $ pat
                            mode   = fmap (svalue . (M.findWithDefault (VS "chromatic") "mode")) $ pat
                            step   = fmap ivalue $ filterJust $ fmap (M.lookup "step")           $ pat
    key = grp [mI "root", mS "mode"]
    step = grp [mI "step", mI "keyoffset"]
in 
  withmodality
  -- keys
    -- $ withmodality
  -- fmap ivalue
    -- $ filterJust
    -- $ fmap (M.lookup "step")
    $ step "0 1 2 3 3:2 3 2 1"
    -- $ step (segment 32 $ irand 9)
    # key "0:major"
    -- |+ step "[0,2,4,6]"
    |+ step "[0,2]"
    # octave 4 
    -- # sus 0.1

  withmodality
    -- $ slow 2
    $ step "0 1 2 3 3:1 3 2 1"
    -- $ step "0"
    -- $ step "[0,2]"
    # key "0:major"
    |+ step "[0,2,4,6]"
    # octave 4 
